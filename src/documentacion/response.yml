components:
  schema:
    Users:
      login:
        type: object
        properties:
          status:
            type: number
            description: HTTP status code
          message:
            type: string
            description: message from the server
          data:
            type: object
            description: data from the server
            properties:
              email:
                type: string
                description: email address
              password:
                type: string
                description: password
        example:
          status: 200
          message: success
          data:
            {
            token: ????????
            }

    Products:
      ok_getproduct:
        type: object
        properties:
          status:
            type: number
            description: HTTP status code
          message:
            type: string
            description: list of products (Paginate)
          data:
            type: object
            description: Data from response
            properties:
              _id:
                type: string
                description: Mongo ID
              title:
                type: string
                description: name of the product
              description:
                type: string
                description: description of the product
              code:
                type: string
                description: code of the product
              price:
                type: number
                description: price of the product
              status:
                type: boolean
                description: status of the product
              stock:
                type: number
                description: stock of the product
              category:
                type: string
                description: categoty of the product
              thumbnails:
                type: string
                description: image of the product
              owner:
                type: string
                description: ID number of the owner of the product or ADMIN as default
        example:
          status: 200
          message: success
          data:
            {
              _id: 653dcd5f130b61ab8dc31557,
              title: a ver si camb,
              description: Otra cosa escrita pa ver ,
              code: mdEsX4mw3N,
              price: {
        "$numberInt": "2999"
    },
              
              stock: {
        "$numberInt": "5"
    },
              category: Comida,
              thumbnails: https://www.themealdb.com/images/media/meals/ursuup1487348423.jpg,
            }

      ok_getProductById:
        type: object
        properties:
          status:
            type: number
            description: HTTP status code
          message:
            type: string
            description: Product found Successfully
          data:
            type: object
            description: Data from response
            properties:
              _id:
                type: string
                description: Mongo ID
              title:
                type: string
                description: name of the product
              description:
                type: string
                description: description of the product
              code:
                type: string
                description: code of the product
              price:
                type: number
                description: price of the product
              status:
                type: boolean
                description: status of the product
              stock:
                type: number
                description: stock of the product
              category:
                type: string
                description: categoty of the product
              thumbnails:
                type: string
                description: image of the product
              owner:
                type: string
                description: ID number of the owner of the product or ADMIN as default
        example:
          status: 200
          message: success
          data:
            {
              _id: 653dcd5f130b61ab8dc31557,
              title: a ver si camb,
              description: Otra cosa escrita pa ver ,
              code: mdEsX4mw3N,
              price: {
        "$numberInt": "2999"
    },
              
              stock: {
        "$numberInt": "5"
    },
              category: Comida,
              thumbnails: https://www.themealdb.com/images/media/meals/ursuup1487348423.jpg,
            }


      ok_addProduct:
        type: object
        properties:
          status:
            type: number
            description: HTTP status code
          message:
            type: string
            description: Product created successfully
          data:
            type: object
            description: Data from response
            properties:
              _id:
                type: string
                description: Mongo ID
              title:
                type: string
                description: name of the product
              description:
                type: string
                description: description of the product
              code:
                type: string
                description: code of the product
              price:
                type: number
                description: price of the product
              status:
                type: boolean
                description: status of the product
              stock:
                type: number
                description: stock of the product
              category:
                type: string
                description: categoty of the product
              thumbnails:
                type: string
                description: image of the product
              owner:
                type: string
                description: ID number of the owner of the product or ADMIN as default
        example:
          status: 200
          message: success
          data:
            {
              _id: 653dcd5f130b61ab8dc31557,
              title: a ver si camb,
              description: Otra cosa escrita pa ver ,
              code: mdEsX4mw3N,
              price: {
        "$numberInt": "2999"
    },
              
              stock: {
        "$numberInt": "5"
    },
              category: Comida,
              thumbnails: https://www.themealdb.com/images/media/meals/ursuup1487348423.jpg,
            }


      ok_updateProduct:
        type: object
        properties:
          status:
            type: number
            description: HTTP status code
          message:
            type: string
            description: Product found Successfully
          data:
            type: object
            description: Data from response
            properties:
              _id:
                type: string
                description: Mongo ID
              title:
                type: string
                description: name of the product
              description:
                type: string
                description: description of the product
              code:
                type: string
                description: code of the product
              price:
                type: number
                description: price of the product
              status:
                type: boolean
                description: status of the product
              stock:
                type: number
                description: stock of the product
              category:
                type: string
                description: categoty of the product
              thumbnails:
                type: string
                description: image of the product
              owner:
                type: string
                description: ID number of the owner of the product or ADMIN as default
        example:
          status: 200
          message: success
          data:
            {
              _id: 653dcd5f130b61ab8dc31557,
              title: a ver si camb,
              description: Otra cosa escrita pa ver ,
              code: mdEsX4mw3N,
              price: {
        "$numberInt": "2999"
    },
              
              stock: {
        "$numberInt": "5"
    },
              category: Comida,
              thumbnails: https://www.themealdb.com/images/media/meals/ursuup1487348423.jpg,
            }


      ok_deleteProduct:
        type: object
        properties:
          status:
            type: number
            description: HTTP status code
          message:
            type: string
            description: Product deleted successfully
          data:
            type: object
            description: Data from response
            properties:
              _id:
                type: string
                description: Mongo ID
              title:
                type: string
                description: name of the product
              description:
                type: string
                description: description of the product
              code:
                type: string
                description: code of the product
              price:
                type: number
                description: price of the product
              status:
                type: boolean
                description: status of the product
              stock:
                type: number
                description: stock of the product
              category:
                type: string
                description: categoty of the product
              thumbnails:
                type: string
                description: image of the product
              owner:
                type: string
                description: ID number of the owner of the product or ADMIN as default
        example:
          status: 200
          message: success
          data:
            {
              _id: 653dcd5f130b61ab8dc31557,
              title: a ver si camb,
              description: Otra cosa escrita pa ver ,
              code: mdEsX4mw3N,
              price: {
        "$numberInt": "2999"
    },
              
              stock: {
        "$numberInt": "5"
    },
              category: Comida,
              thumbnails: https://www.themealdb.com/images/media/meals/ursuup1487348423.jpg,
            }


    Cart:
      ok_getCart:
        type: object
        properties:
          status:
            type: number
            description: HTTP status code
          message:
            type: string
            description: List of carts
          data:
            type: object
            description: Data from response
            properties:
              _id:
                type: string
                description: ID of the Cart
              products:
                type: array
                description: Array of products associated
        example:
          status: 200
          message: success
          data:
            [
              {
                _id: "6564a0c06a7d27e1098fdad2",
                products:
                  [{ ProductID: "653dcd5f130b61ab8dc31557", quantity: 2 }],
              },
              { _id: "64e57fdc43dc1de9fe20e184", products: [] },
            ]

      ok_createCart:
        type: object
        properties:
          status:
            type: number
            description: HTTP status code
          message:
            type: string
            description: Cart created successfully
          data:
            type: object
            description: Data from response
            properties:
              _id:
                type: string
                description: ID of the Cart
              products:
                type: array
                description: Empty Array of products associated
        example:
          status: 200
          message: success
          data: { _id: "6564a0c06a7d27e1098fdad2", products: [] }

      ok_getCartById:
        type: object
        properties:
          status:
            type: number
            description: HTTP status code
          message:
            type: string
            description: Cart found successfully
          data:
            type: object
            description: Data from response
            properties:
              _id:
                type: string
                description: ID of the Cart
              products:
                type: array
                description: Array of products associated
        example:
          status: 200
          message: success
          data:
            [
              {
                _id: "6564a0c06a7d27e1098fdad2",
                products:
                  [{ ProductID: "653dcd5f130b61ab8dc31557", quantity: 2 }],
              },
              { _id: "64e57fdc43dc1de9fe20e184", products: [] },
            ]

      ok_cleanCart:
        type: object
        properties:
          status:
            type: number
            description: HTTP status code
          message:
            type: string
            description: Cart cleaned successfully
          data:
            type: object
            description: Data from response
            properties:
              _id:
                type: string
                description: ID of the Cart
              products:
                type: array
                description: Empty array of products
        example:
          status: 200
          message: success
          data: { _id: "6564a0c06a7d27e1098fdad2", products: [] }

      ok_updateCart:
        type: object
        properties:
          status:
            type: number
            description: HTTP status code
          message:
            type: string
            description: Cart updated successfully
          data:
            type: object
            description: Data from response
            properties:
              _id:
                type: string
                description: ID of the Cart
              products:
                type: array
                description: Array of products updated
        example:
          status: 200
          message: success
          data:
            [
              {
                _id: "6564a0c06a7d27e1098fdad2",
                products:
                  [{ ProductID: "653dcd5f130b61ab8dc31557", quantity: 2 }],
              },
            ]

      ok_saveProductToCart:
        type: object
        properties:
          status:
            type: number
            description: HTTP status code
          message:
            type: string
            description: Product added to cart saccessfully
          data:
            type: object
            description: Data from response
            properties:
              _id:
                type: string
                description: ID of the Cart
              products:
                type: array
                description: Array of products
        example:
          status: 200
          message: success
          data:
            [
              {
                _id: "6564a0c06a7d27e1098fdad2",
                products:
                  [{ ProductID: "653dcd5f130b61ab8dc31557", quantity: 2 }],
              },
            ]

      ok_deleteProductInCart:
        type: object
        properties:
          status:
            type: number
            description: HTTP status code
          message:
            type: string
            description: Delete product in cart
          data:
            type: object
            description: Data from response
            properties:
              _id:
                type: string
                description: ID of the Cart
              products:
                type: array
                description: Array of products
        example:
          status: 200
          message: success
          data:
            [
              {
                _id: "6564a0c06a7d27e1098fdad2",
                products:
                  [{ ProductID: "653dcd5f130b61ab8dc31557", quantity: 2 }],
              },
            ]

      ok_updateQuantityInCart:
        type: object
        properties:
          status:
            type: number
            description: HTTP status code
          message:
            type: string
            description: Product added to cart saccessfully
          data:
            type: object
            description: Data from response
            properties:
              _id:
                type: string
                description: ID of the Cart
              products:
                type: array
                description: Array of products
        example:
          status: 200
          message: success
          data:
            [
              {
                _id: "6564a0c06a7d27e1098fdad2",
                products:
                  [{ ProductID: "653dcd5f130b61ab8dc31557", quantity: 2 }],
              },
            ]






    Error:
      notFound:
        type: object
        properties:
          status:
            type: number
            description: HTTP status code
          message:
            type: string
            description: Not foud message
          data:
            type: object
            description: Data from response
        example:
          status: 404,
          message: Not Found,
          error: Product Not found

      unauthorized:
        type: object
        properties:
          status:
            type: number
            description: HTTP status code
          message:
            type: string
            description: Unauthorized error message
          data:
            type: object
            description: Data from response
        example:
          status: 401,
          message: Unauthorized,
          error: User is not authorized

      forbidden:
        type: object
        properties:
          status:
            type: number
            description: HTTP status code
          message:
            type: string
            description: Fobidden error message
          data:
            type: object
            description: Data from response
        example:
          status: 403,
          message: Fobidden,
          error: Fobidden

      internalServerError:
        type: object
        properties:
          status:
            type: number
            description: HTTP status code
          message:
            type: string
            description: Server error message
          data:
            type: object
            description: Data from response
        example:
          status: 500,
          message: Interrnal Server Error,
          error: Interrnal Server Error
